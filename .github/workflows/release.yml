name: Release

on:
  pull_request:
    branches:
      - main
    types:
      - closed
    
env:
  DOTNET_NOLOGO: true                     # Disable the .NET logo
  DOTNET_SKIP_FIRST_TIME_EXPERIENCE: true # Disable the .NET first time experience
  DOTNET_CLI_TELEMETRY_OPTOUT: true       # Disable sending .NET CLI telemetry
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

jobs:
  construct-version:
    runs-on: ubuntu-latest
    name: Construct version
    outputs:
      version: ${{ steps.version.outputs.version }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          ref: 'main'
          fetch-depth: 0
          
      - name: Calculate version string
        id: version
        uses: paulhatch/semantic-version@v4.0.2
        with:
          tag_prefix: "v"
          major_pattern: "(MAJOR)"
          minor_pattern: "(MINOR)"
          format: "${major}.${minor}.${patch}.${increment}"
          bump_each_commit: false

  update-changelog:
    runs-on: ubuntu-latest
    needs: construct-version
    name: Update Changelog
    outputs:
      changelog-statement: ${{ steps.changelog.outputs.changes }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          ref: 'main'
          token: ${{ secrets.PAT }}

      - name: Get CHANGELOG Entry
        uses: mindsers/changelog-reader-action@v2
        id: changelog
        with:
          version: Unreleased
          validation_level: warn
          path: ./CHANGELOG.md

      - name: Update CHANGELOG
        uses: thomaseizinger/keep-a-changelog-new-release@v1
        with:
          version: ${{ needs.construct-version.outputs.version }}

      - name: Commit updated CHANGELOG
        uses: stefanzweifel/git-auto-commit-action@v4
        with:
          branch: main
          commit_message: '[Automated] Update CHANGELOG'
          file_pattern: CHANGELOG.md
          
  package-build:
    runs-on: windows-2022
    needs: [construct-version, update-changelog]
    name: Nuget Build
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          ref: 'main'
          fetch-depth: 0

      - name: Setup .NET 6
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: 6.0.x
          include-prerelease: true

      - name: Restore Dependencies
        run: dotnet restore src/Edsm.Sdk.sln

      - name: Build And Pack
        run: dotnet build --no-restore -c Release /p:Version=${{needs.construct-version.outputs.version}} .\src\EDSMTriangulation.sln

      - name: Upload Artifact
        uses: actions/upload-artifact@v2.3.1
        with:
          name: nuget-package
          path: src/EdsmTriangulationInterface/bin/Release/net6.0/Edsm.Sdk${{needs.construct-version.outputs.version}}.nupkg
  
  publish-release:
    runs-on: ubuntu-latest
    needs: [construct-version, update-changelog, package-build]
    name: Publish Release
    steps:
      - name: Download All Artifacts
        id: download
        uses: actions/download-artifact@v3

      - name: Construct Release
        uses: actions/create-release@v1
        id: create-release
        with:
          release_name: v${{ needs.construct-version.outputs.version }}
          tag_name: v${{ needs.construct-version.outputs.version }}
          body: ${{ needs.construct-version.outputs.changelog-statement }}
          
      - name: Upload Release
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create-release.outputs.upload_url }}
          asset_path: ${{steps.download.outputs.download-path}}/nuget-package/net6.0/Edsm.Sdk${{needs.construct-version.outputs.version}}.nupkg
          asset_name: Edsm.Sdk${{ needs.construct-version.outputs.version }}.nupkg
          asset_content_type: application/zip

  push-to-nuget:
    runs-on: ubuntu-latest
    needs: [construct-version, update-changelog, package-build, publish-release]
    name: Push To Nuget
    steps:
      - name: Download All Artifacts
        id: download

      - name: Build And Pack
        run: dotnet nuget push ${{steps.download.outputs.download-path}}/nuget-package/net6.0/Edsm.Sdk${{needs.construct-version.outputs.version}}.nupkg --api-key ${{ secrets.NUGET_API_KEY }} --source https://api.nuget.org/v3/index.json